openapi: 3.0.3
info:
  title: Main Server API
  version: 1.0.0
  description: Main Server for 'Octopus' app
paths:
  /api/v1/auth/signup/:
    post:
      summary: Регистрация пользователя
      operationId: Регистрация пользователя
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                re_password:
                  type: string
              required:
                - first_name
                - last_name
                - email
                - password
                - re_password
      responses:
        '204':
          description: >-
            На почту отправлено письмо со ссылкой подтверждения регистрации.
            <br> Регистрация будет завершена после запроса к эндпоинту
            signup_confirm/
        '400':
          $ref: '#/components/responses/ValidationError'
  /api/v1/auth/signup_confirm/:
    post:
      summary: Подтверждение регистрации
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                token:
                  type: string
              required:
                - uid
                - token
      responses:
        '204':
          description: Ваша учетная запись создана
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          description: Регистрация подтверждена ранее
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example:
                      "User is active"
  /api/v1/auth/re_signup_confirm/:
    post:
      summary: Повторная отправка письма для подтверждения регистрации
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
      responses:
        '204':
          description: >-
            На почту отправлено письмо со ссылкой подтверждения регистрации.
            <br> Регистрация будет завершена после запроса к эндпоинту signup_confirm/
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          description: Регистрация подтверждена ранее
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example:
                      "User is active"
  /api/v1/auth/signin/:
    post:
      summary: Вход в систему
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Вход успешно выполнен
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  refresh:
                    type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          description: Пользователь неактивен
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example:
                      "User is inactive"
  /api/v1/auth/reset_password/:
    post:
      summary: Сброс пароля
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '204':
          description: >-
            На почту отправлено письмо со ссылкой подтверждения смены пароля.
            <br> Пароль будет изменён после запроса к эндпоинту
            reset_password_confirm/
        '400':
          $ref: '#/components/responses/ValidationError'
        '403':
          description: Пользователь неактивен
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example:
                      "User is inactive"
  /api/v1/auth/reset_password_confirm/:
    post:
      summary: Подтверждение изменения пароля
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                uid:
                  type: string
                token:
                  type: string
                new_password:
                  type: string
                re_new_password:
                  type: string
              required:
                - uid
                - token
                - new_password
                - re_new_password
      responses:
        '204':
          description: Пароль успешно изменен
        '400':
          $ref: '#/components/responses/ValidationError'
  /api/v1/users/me/:
    get:
      summary: ЛК текущего пользователя
      operationId: ЛК текущего пользователя
      description: Доступно авторизованным по токену
      parameters: []
      tags:
        - Users
      security:
        - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
        '401':
          $ref: '#/components/responses/AuthenticationError'
    put:
      summary: Изменение информации о текущем пользователе
      operationId: Изменение информации о текущем пользователе
      tags:
        - Users
      security:
        - jwtAuth: []
      description: Доступно авторизованным по токену.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  maxLength: 30
                  description: Имя
                  example: Вася
                last_name:
                  type: string
                  maxLength: 30
                  description: Фамилия
                  example: Пупкин
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Данные успешно обновлены
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
  /api/v1/users/change_password/:
    post:
      summary: Изменение пароля текущего пользователя
      description: Доступно авторизованным по токену
      tags:
        - Users
      security:
        - jwtAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                new_password:
                  type: string
                re_new_password:
                  type: string
              required:
                - uid
                - token
                - current_password
                - new_password
                - re_new_password
      responses:
        '204':
          description: Пароль успешно изменен
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
  /api/v1/tokens/refresh/:
    post:
      summary: Обновление JWT токенов
      tags:
        - Tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
              required:
                - refresh
      responses:
        '200':
          description: JWT токены успешно обновлены
          content:
            application/json:
              schema:
                type: object
                properties:
                  access:
                    type: string
                  refresh:
                    type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/AuthenticationError'
  /api/v1/info/industries/:
    get:
      summary: Список объектов Industry
      parameters:
        - in: query
          required: false
          name: name
          description: Поиск по имени индустрии компании (частичное совпадение)
          schema:
            type: string
      tags:
        - Info
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
  /api/v1/info/service_categories/:
    get:
      summary: Список объектов ServiceCategory
      parameters:
        - in: query
          required: false
          name: name
          description: Поиск по имени категории сервиса (частичное совпадение)
          schema:
            type: string
      tags:
        - Info
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    services:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
  /api/v1/info/services/:
    get:
      summary: Список объектов Service
      parameters:
        - in: query
          required: false
          name: name
          description: Поиск по имени сервиса (частичное совпадение)
          schema:
            type: string
      tags:
        - Info
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    category:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
  /api/v1/info/cities/:
    get:
      summary: Список объектов City
      parameters:
        - in: query
          required: false
          name: name
          description: Поиск по имени города (частичное совпадение)
          schema:
            type: string
      tags:
        - Info
      responses:
        '200':
          description: сортировка по релевантности строке поиска
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
  /api/v1/info/search_services_companies/:
    get:
      summary: Поиск на главной странице - списки компаний и сервисов
      parameters:
        - in: query
          required: true
          name: name
          description: Поиск по именам компании и сервиса (частичное совпадение). Минимум два символа
          schema:
            type: string
      tags:
        - Info
      responses:
        '200':
          description: сортировка по релевантности строке поиска
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    companies:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                    services:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
        '400':
          description: Некорректное значение параметра запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_param_name:
                    type: array
                    items:
                      type: string
                    example:
                      - <query_param_error>
  /api/v1/companies/:
    get:
      summary: Список компаний с краткой информацией
      description: >-
        Страница доступна всем пользователям. <br>
        Доступна фильтрация по городу, услугам, избранному
      parameters:
        - name: page
          required: false
          in: query
          description: Номер страницы
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Количество объектов на странице
          schema:
            type: integer
        - name: city
          required: false
          in: query
          description: >-
            Уникальный идентификатор города <br>
            Множественный фильтр по id города
          schema:
            type: integer
        - name: service
          required: false
          in: query
          description: >-
            Уникальный идентификатор услуги <br>
            Множественный фильтр по id услуг (в ответе компании как минимум с одним совпадением id услуги)
          schema:
            type: integer
        - name: is_favorited
          required: false
          in: query
          description: Показывать только компании, находящиеся в списке избранного.
          schema:
            type: integer
            enum: [0, 1]
      tags:
        - Companies
      responses:
        '200':
          description: 'сортировка по количеству совпадений фильтра (сначала больше)'
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_pages:
                    type: integer
                  next_page:
                    type: string
                    format: url
                    example: https://api.example.org/accounts/?page=5
                  previous_page:
                    type: string
                    format: url
                    example: https://api.example.org/accounts/?page=3
                  total_objects:
                    type: integer
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        logo:
                          type: string
                          format: url
                        city:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                        description:
                          type: string
                        services:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              name:
                                type: string
                        is_favorited:
                          type: boolean
                          description: 'Находится ли в избранном'
        '400':
          description: Некорректное значение параметра запроса
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_param_name:
                    type: array
                    items:
                      type: string
                    example:
                      - <query_param_error>
        '404':
          description: Некорректное значение параметра запроса page (несуществущий номер страницы или значение не является числом)
          content:
            application/json:
              schema:
                description: Объект не найден
                type: object
                properties:
                  detail:
                    description: Описание ошибки
                    example: Invalid page
                    type: string
  /api/v1/companies/{id}/:
    get:
      summary: Подробная информация о компании
      tags:
        - Companies
      parameters:
        - in: path
          name: id
          description: Уникальный идентификатор компании
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  description:
                    type: string
                  email:
                    type: string
                  phones:
                    type: array
                    items:
                      type: string
                  city:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  address:
                    type: string
                  industries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                  services:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        category:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                  logo:
                    type: string
                    format: url
                  website:
                    type: string
                  team_size:
                    type: integer
                  year_founded:
                    type: integer
                  is_favorited:
                    type: boolean
                    description: 'Находится ли в избранном'
        '404':
          $ref: '#/components/responses/NotFound'
  /api/v1/companies/{id}/favorite/:
    post:
      summary: Добавить компанию в избранное
      description: Доступно авторизованным по токену
      tags:
        - Favorite
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Уникальный идентификатор компании
          schema:
            type: integer
      responses:
        '201':
          description: Компания успешно добавлена в избранное
        '400':
          description: Ошибка добавления в избранное
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example:
                      "Компания добавлена в избранное ранее"
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      summary: Удалить компанию из избранного
      description: Доступно авторизованным по токену
      tags:
        - Favorite
      security:
        - jwtAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Уникальный идентификатор компании
          schema:
            type: integer
      responses:
        '204':
          description: Компания успешно удалена из избранного
        '400':
          description: Ошибка удаления из избранного
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example:
                      "Компании не было в избранном"
        '401':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    User:
      description: Пользователь
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 30
          description: Имя
          example: Вася
        last_name:
          type: string
          maxLength: 30
          description: Фамилия
          example: Пупкин
        email:
          type: string
          format: email
          maxLength: 254
          description: Адрес электронной почты
    ValidationError:
      description: Стандартные ошибки валидации DRF
      type: object
      properties:
        field_name:
          description: >-
            Название поля, в котором произошли ошибки. Таких полей может быть
            несколько
          example:
            - <field_error>
          type: array
          items:
            type: string
    AuthenticationError:
      description: Ошибки аутентификации
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: message
          type: string
    NotFound:
      description: Объект не найден
      type: object
      properties:
        detail:
          description: Описание ошибки
          example: Страница не найдена.
          type: string
  responses:
    ValidationError:
      description: Ошибки валидации в стандартном формате DRF
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    AuthenticationError:
      description: Ошибки аутентификации
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthenticationError'
    NotFound:
      description: Объект не найден
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
  securitySchemes:
    jwtAuth:
      description: >-
        Авторизация по токену. <br> Все запросы от имени пользователя должны
        выполняться с заголовком <br> "Authorization: Bearer <access-token>"
      type: http
      scheme: bearer
      bearerFormat: JWT
